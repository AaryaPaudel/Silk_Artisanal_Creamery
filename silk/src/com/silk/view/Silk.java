/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.silk.view;

import com.silk.model.IceCreamModel;
import com.silk.util.ValidationUtil;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author aaryapaudel LMU ID:23048670
 */
public class Silk extends javax.swing.JFrame {
    private List<IceCreamModel> IceCreamList;
    private java.awt.CardLayout cardLayout;
    private final Color errorColor = new Color(255, 51, 0);
    private final Color yellowColor = new Color(239, 192, 32);
    /**
     * Creates new form Silk
     */
    public Silk() {
        initComponents();
        initializeLayout();
        initializeData();
        startProgress();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainLogo = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        pnlOurStory = new javax.swing.JPanel();
        lblOurStory = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaOurStory = new javax.swing.JTextArea();
        pnlQualiryIngredients = new javax.swing.JPanel();
        lblQualityIngredients = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtaQualityIngredients = new javax.swing.JTextArea();
        pnlTryOurFlavours = new javax.swing.JPanel();
        lblTryOurTexts = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtaTryOurFlavours = new javax.swing.JTextArea();
        pnlVeganOptions = new javax.swing.JPanel();
        lblVeganOptions = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtaVeganOptions = new javax.swing.JTextArea();
        pnlChallengesWeFace = new javax.swing.JPanel();
        lblChallengesWeFace = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtaChallangesWeFace = new javax.swing.JTextArea();
        pnlJoinUs = new javax.swing.JPanel();
        lblJoinUs = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtaJoinUs = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        pnlMango = new javax.swing.JPanel();
        lblMangoImg = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtaMango = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        pnlOrange = new javax.swing.JPanel();
        lblOrangeImg = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtaOrange = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        pnlRaspberry = new javax.swing.JPanel();
        lblRaspberryImg = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        txtaRaspberry = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        pnlBlueberry = new javax.swing.JPanel();
        lblBlueberryImg = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtaBlueberry = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        pnlMint = new javax.swing.JPanel();
        lblMintImg = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtaMint = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        pnlCookies = new javax.swing.JPanel();
        lblCookiesImg = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        txtaCookies = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        pnlTiramisu = new javax.swing.JPanel();
        lblTiramisuImg = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtaTiramisu = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        pnlMocha = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtaMocha = new javax.swing.JTextArea();
        lblMochaImg = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pnlBrownie = new javax.swing.JPanel();
        lblBrownieImg = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        txtaBrownie = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        pnlAdmin = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIceCream = new javax.swing.JTable();
        lbltblTitleIceCream = new javax.swing.JLabel();
        pnlForm = new javax.swing.JPanel();
        btnADD = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        btnCLEAR = new javax.swing.JButton();
        tfFlavourName = new javax.swing.JTextField();
        tfAvailability = new javax.swing.JTextField();
        tfStockQuantity = new javax.swing.JTextField();
        tfPricePerScoop = new javax.swing.JTextField();
        tfCaloriePerScoop = new javax.swing.JTextField();
        tfAllergens = new javax.swing.JTextField();
        tfSpecialNotes = new javax.swing.JTextField();
        tfID = new javax.swing.JTextField();
        lblFeedbackDelete = new javax.swing.JLabel();
        lblErrorMsgId = new javax.swing.JLabel();
        lblErrorMsgFlavorName = new javax.swing.JLabel();
        lblErrorMsgAvailability = new javax.swing.JLabel();
        lblErrorMsgStockQuantity = new javax.swing.JLabel();
        lblErrorMsgPricePerScoop = new javax.swing.JLabel();
        lblErrorMsgCaloriePerScoop = new javax.swing.JLabel();
        lblErrorMsgAllergens = new javax.swing.JLabel();
        lblErrorMsgSpecialNotes = new javax.swing.JLabel();
        lblFeedbackUpdate = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        pnlSplitLogin = new javax.swing.JPanel();
        lblLoginLogo = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        pfPassword = new javax.swing.JPasswordField();
        lblLoginError = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashScreen = new javax.swing.JProgressBar();
        lblLoading = new javax.swing.JLabel();
        lblLoadingName = new javax.swing.JLabel();
        lblLoadingLogo = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(216, 210, 195));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1340, 840));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1340, 840));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1340, 840));
        pnlMainScreen.setSize(new java.awt.Dimension(1340, 840));

        pnlMainBar.setBackground(new java.awt.Color(183, 160, 135));

        lblMainLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/HomeLogo.png"))); // NOI18N

        btnLogOut.setBackground(new java.awt.Color(158, 114, 77));
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log Out");
        btnLogOut.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMainLogo)
                .addGap(527, 527, 527)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMainLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPaneMain.setBackground(new java.awt.Color(183, 160, 135));
        tabPaneMain.setForeground(new java.awt.Color(55, 36, 20));

        pnlHome.setBackground(new java.awt.Color(183, 160, 135));
        pnlHome.setForeground(new java.awt.Color(183, 160, 135));
        pnlHome.setMaximumSize(new java.awt.Dimension(1340, 679));
        pnlHome.setMinimumSize(new java.awt.Dimension(1340, 679));
        pnlHome.setPreferredSize(new java.awt.Dimension(1340, 679));
        pnlHome.setSize(new java.awt.Dimension(1340, 679));

        pnlOurStory.setBackground(new java.awt.Color(134, 89, 56));

        lblOurStory.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblOurStory.setForeground(new java.awt.Color(255, 255, 255));
        lblOurStory.setText("Our Story");

        txtaOurStory.setEditable(false);
        txtaOurStory.setBackground(new java.awt.Color(134, 89, 56));
        txtaOurStory.setColumns(20);
        txtaOurStory.setForeground(new java.awt.Color(255, 255, 255));
        txtaOurStory.setRows(5);
        txtaOurStory.setText("Welcome to Silk Artisanal Creamery! Our story \nstarted with lover for ice cream from Nepal to \nEurope.Our founder pursued a higher education \nin business studies and then underwent training\nin culinary arts.He then worked in a Gelateria to \nlearn the art of making ice cream. Inspired by this \nexperience,Silk was created to bring exceptional \nflavors back to Nepal.");
        txtaOurStory.setBorder(null);
        jScrollPane2.setViewportView(txtaOurStory);

        javax.swing.GroupLayout pnlOurStoryLayout = new javax.swing.GroupLayout(pnlOurStory);
        pnlOurStory.setLayout(pnlOurStoryLayout);
        pnlOurStoryLayout.setHorizontalGroup(
            pnlOurStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOurStoryLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlOurStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOurStory)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOurStoryLayout.setVerticalGroup(
            pnlOurStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOurStoryLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblOurStory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pnlQualiryIngredients.setBackground(new java.awt.Color(134, 89, 56));

        lblQualityIngredients.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblQualityIngredients.setForeground(new java.awt.Color(255, 255, 255));
        lblQualityIngredients.setText("Quality Ingredients");

        txtaQualityIngredients.setEditable(false);
        txtaQualityIngredients.setBackground(new java.awt.Color(134, 89, 56));
        txtaQualityIngredients.setColumns(20);
        txtaQualityIngredients.setForeground(new java.awt.Color(255, 255, 255));
        txtaQualityIngredients.setRows(5);
        txtaQualityIngredients.setText("At Silk, we believe in using only the best. A \ncommitment to 100% all-natural ingredients sets us \napart in the Nepalese ice cream market. We decide\n not to use artificial colors, extracts, or processed \nmaterials. Each batch is freshly made with \nhigh-quality seasonal flavors using fresh and local \nfruits, along with first-class imports.");
        txtaQualityIngredients.setAutoscrolls(false);
        txtaQualityIngredients.setBorder(null);
        txtaQualityIngredients.setFocusable(false);
        jScrollPane3.setViewportView(txtaQualityIngredients);

        javax.swing.GroupLayout pnlQualiryIngredientsLayout = new javax.swing.GroupLayout(pnlQualiryIngredients);
        pnlQualiryIngredients.setLayout(pnlQualiryIngredientsLayout);
        pnlQualiryIngredientsLayout.setHorizontalGroup(
            pnlQualiryIngredientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQualiryIngredientsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlQualiryIngredientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQualityIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlQualiryIngredientsLayout.setVerticalGroup(
            pnlQualiryIngredientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQualiryIngredientsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblQualityIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pnlTryOurFlavours.setBackground(new java.awt.Color(134, 89, 56));

        lblTryOurTexts.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblTryOurTexts.setForeground(new java.awt.Color(255, 255, 255));
        lblTryOurTexts.setText("Try Our Flavours");

        txtaTryOurFlavours.setEditable(false);
        txtaTryOurFlavours.setBackground(new java.awt.Color(134, 89, 56));
        txtaTryOurFlavours.setColumns(20);
        txtaTryOurFlavours.setForeground(new java.awt.Color(255, 255, 255));
        txtaTryOurFlavours.setRows(5);
        txtaTryOurFlavours.setText("We invite you to try our ice cream! Whether you \nprefer classic flavors or something adventurous, we \nhave something for everyone. Visit our stores or \norder online to find your new favorite flavor.\n\n\n");
        txtaTryOurFlavours.setBorder(null);
        jScrollPane4.setViewportView(txtaTryOurFlavours);

        javax.swing.GroupLayout pnlTryOurFlavoursLayout = new javax.swing.GroupLayout(pnlTryOurFlavours);
        pnlTryOurFlavours.setLayout(pnlTryOurFlavoursLayout);
        pnlTryOurFlavoursLayout.setHorizontalGroup(
            pnlTryOurFlavoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTryOurFlavoursLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlTryOurFlavoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTryOurTexts, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlTryOurFlavoursLayout.setVerticalGroup(
            pnlTryOurFlavoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTryOurFlavoursLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblTryOurTexts)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pnlVeganOptions.setBackground(new java.awt.Color(134, 89, 56));

        lblVeganOptions.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblVeganOptions.setForeground(new java.awt.Color(255, 255, 255));
        lblVeganOptions.setText("Vegan Options");

        txtaVeganOptions.setEditable(false);
        txtaVeganOptions.setBackground(new java.awt.Color(134, 89, 56));
        txtaVeganOptions.setColumns(20);
        txtaVeganOptions.setForeground(new java.awt.Color(255, 255, 255));
        txtaVeganOptions.setRows(5);
        txtaVeganOptions.setText("At Silk, it's all about inclusivity. That's why our \nvegan ice cream flavors contain different types-all\nmade from plant-based ingredients and renouncing \nneither taste nor quality. Our vegan flavors are \ncrafted with the same pride and passion as are our \ntraditional flavors, so that everyone gets to enjoy a \ndelicious scoop of Silk ice cream.");
        txtaVeganOptions.setBorder(null);
        jScrollPane5.setViewportView(txtaVeganOptions);

        javax.swing.GroupLayout pnlVeganOptionsLayout = new javax.swing.GroupLayout(pnlVeganOptions);
        pnlVeganOptions.setLayout(pnlVeganOptionsLayout);
        pnlVeganOptionsLayout.setHorizontalGroup(
            pnlVeganOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVeganOptionsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlVeganOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVeganOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlVeganOptionsLayout.setVerticalGroup(
            pnlVeganOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVeganOptionsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblVeganOptions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pnlChallengesWeFace.setBackground(new java.awt.Color(134, 89, 56));

        lblChallengesWeFace.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblChallengesWeFace.setForeground(new java.awt.Color(255, 255, 255));
        lblChallengesWeFace.setText("Challenges We Face");

        txtaChallangesWeFace.setEditable(false);
        txtaChallangesWeFace.setBackground(new java.awt.Color(134, 89, 56));
        txtaChallangesWeFace.setColumns(20);
        txtaChallangesWeFace.setForeground(new java.awt.Color(255, 255, 255));
        txtaChallangesWeFace.setRows(5);
        txtaChallangesWeFace.setText("While we have had successes, the challenges are \nalso there. The Kathmandu market is getting \ncrowded and expansion into other cities such as \nPokhara may cost a lot. We will not compromise on \nthe quality and have ruled out any franchising of Silk.\nSometimes sourcing can be challenging when \nsourced locally, but we work on consistency and \nunique flavor. ");
        txtaChallangesWeFace.setBorder(null);
        jScrollPane6.setViewportView(txtaChallangesWeFace);

        javax.swing.GroupLayout pnlChallengesWeFaceLayout = new javax.swing.GroupLayout(pnlChallengesWeFace);
        pnlChallengesWeFace.setLayout(pnlChallengesWeFaceLayout);
        pnlChallengesWeFaceLayout.setHorizontalGroup(
            pnlChallengesWeFaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChallengesWeFaceLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlChallengesWeFaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChallengesWeFace)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlChallengesWeFaceLayout.setVerticalGroup(
            pnlChallengesWeFaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChallengesWeFaceLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblChallengesWeFace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pnlJoinUs.setBackground(new java.awt.Color(134, 89, 56));

        lblJoinUs.setFont(new java.awt.Font("Malayalam MN", 0, 20)); // NOI18N
        lblJoinUs.setForeground(new java.awt.Color(255, 255, 255));
        lblJoinUs.setText("Join Us !");

        txtaJoinUs.setEditable(false);
        txtaJoinUs.setBackground(new java.awt.Color(134, 89, 56));
        txtaJoinUs.setColumns(20);
        txtaJoinUs.setForeground(new java.awt.Color(255, 255, 255));
        txtaJoinUs.setRows(5);
        txtaJoinUs.setText("Join the Silk family! For the latest flavor news and \nspecial promotions, follow us on social media. Your \nfeedback goes a long way in helping us create your \nbest ice cream experience.");
        txtaJoinUs.setBorder(null);
        jScrollPane7.setViewportView(txtaJoinUs);

        javax.swing.GroupLayout pnlJoinUsLayout = new javax.swing.GroupLayout(pnlJoinUs);
        pnlJoinUs.setLayout(pnlJoinUsLayout);
        pnlJoinUsLayout.setHorizontalGroup(
            pnlJoinUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJoinUsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlJoinUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblJoinUs)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlJoinUsLayout.setVerticalGroup(
            pnlJoinUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJoinUsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblJoinUs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(165, 121, 90));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/footer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlVeganOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlOurStory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlChallengesWeFace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlQualiryIngredients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTryOurFlavours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlJoinUs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(75, 75, 75))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlQualiryIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlOurStory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTryOurFlavours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlChallengesWeFace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlJoinUs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlVeganOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabPaneMain.addTab("Home", pnlHome);

        pnlMenu.setBackground(new java.awt.Color(183, 160, 135));
        pnlMenu.setMaximumSize(new java.awt.Dimension(1340, 679));
        pnlMenu.setMinimumSize(new java.awt.Dimension(1340, 679));
        pnlMenu.setPreferredSize(new java.awt.Dimension(1340, 679));
        pnlMenu.setSize(new java.awt.Dimension(1340, 679));

        pnlMango.setBackground(new java.awt.Color(134, 89, 56));
        pnlMango.setMaximumSize(new java.awt.Dimension(350, 200));
        pnlMango.setPreferredSize(new java.awt.Dimension(350, 200));
        pnlMango.setSize(new java.awt.Dimension(350, 200));

        lblMangoImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/mango.png"))); // NOI18N

        txtaMango.setEditable(false);
        txtaMango.setBackground(new java.awt.Color(134, 89, 56));
        txtaMango.setColumns(20);
        txtaMango.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaMango.setForeground(new java.awt.Color(255, 255, 255));
        txtaMango.setLineWrap(true);
        txtaMango.setRows(5);
        txtaMango.setText("A refreshing blend of ripe mangoes, ourMango Sorbet is a tropical delight that’sperfect for warm days.\nIngredients: Mango puree, sugar, \nwater, lemon juice.\nServing Suggestions: Enjoy it in a waffecone or topped with fresh fruit!\n\nVEGAN AND GLUTEN FREE\n");
        txtaMango.setAutoscrolls(false);
        txtaMango.setSelectionColor(new java.awt.Color(102, 153, 255));
        jScrollPane9.setViewportView(txtaMango);

        jLabel1.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANGO SORBET");

        javax.swing.GroupLayout pnlMangoLayout = new javax.swing.GroupLayout(pnlMango);
        pnlMango.setLayout(pnlMangoLayout);
        pnlMangoLayout.setHorizontalGroup(
            pnlMangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMangoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMangoImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMangoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMangoLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMangoLayout.setVerticalGroup(
            pnlMangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMangoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMangoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMangoImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMangoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );

        pnlOrange.setBackground(new java.awt.Color(134, 89, 56));
        pnlOrange.setMaximumSize(new java.awt.Dimension(350, 200));
        pnlOrange.setMinimumSize(new java.awt.Dimension(350, 200));
        pnlOrange.setPreferredSize(new java.awt.Dimension(350, 200));
        pnlOrange.setSize(new java.awt.Dimension(350, 200));

        lblOrangeImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/orange.png"))); // NOI18N

        jScrollPane10.setWheelScrollingEnabled(false);

        txtaOrange.setEditable(false);
        txtaOrange.setBackground(new java.awt.Color(134, 89, 56));
        txtaOrange.setColumns(20);
        txtaOrange.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaOrange.setForeground(new java.awt.Color(255, 255, 255));
        txtaOrange.setLineWrap(true);
        txtaOrange.setRows(5);
        txtaOrange.setText("Zesty and sweet, our Orange Sorbet captures the essence of summer with\nevery scoop.\nIngredients: Orange juice, sugar, water, lemon zest.\nServing Suggestions: Perfect as a \npalate cleanser between courses!\n\nVEGAN AND GLUTEN FREE");
        txtaOrange.setAutoscrolls(false);
        txtaOrange.setFocusable(false);
        jScrollPane10.setViewportView(txtaOrange);

        jLabel2.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ORANGE SORBET");

        javax.swing.GroupLayout pnlOrangeLayout = new javax.swing.GroupLayout(pnlOrange);
        pnlOrange.setLayout(pnlOrangeLayout);
        pnlOrangeLayout.setHorizontalGroup(
            pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrangeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOrangeImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOrangeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlOrangeLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOrangeLayout.setVerticalGroup(
            pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrangeImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlOrangeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlRaspberry.setBackground(new java.awt.Color(134, 89, 56));
        pnlRaspberry.setMaximumSize(new java.awt.Dimension(350, 200));
        pnlRaspberry.setMinimumSize(new java.awt.Dimension(350, 200));
        pnlRaspberry.setSize(new java.awt.Dimension(350, 200));

        lblRaspberryImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/raspberry.png"))); // NOI18N

        txtaRaspberry.setEditable(false);
        txtaRaspberry.setBackground(new java.awt.Color(134, 89, 56));
        txtaRaspberry.setColumns(20);
        txtaRaspberry.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaRaspberry.setForeground(new java.awt.Color(255, 255, 255));
        txtaRaspberry.setLineWrap(true);
        txtaRaspberry.setRows(5);
        txtaRaspberry.setText("Bursting with fresh raspberry flavor, this sorbet is both tart and sweet an \nirresistible treat!\nIngredients: Raspberry puree, sugar,\nwater, lemon juice.\nServing Suggestions: Serve in a cup \nwith mint leaves for garnish.\n\nVEGAN AND GLUTEN FREE\n");
        txtaRaspberry.setAutoscrolls(false);
        txtaRaspberry.setFocusable(false);
        jScrollPane14.setViewportView(txtaRaspberry);

        jLabel3.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("RASPBERRY SORBET");

        javax.swing.GroupLayout pnlRaspberryLayout = new javax.swing.GroupLayout(pnlRaspberry);
        pnlRaspberry.setLayout(pnlRaspberryLayout);
        pnlRaspberryLayout.setHorizontalGroup(
            pnlRaspberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRaspberryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRaspberryImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlRaspberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRaspberryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRaspberryLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        pnlRaspberryLayout.setVerticalGroup(
            pnlRaspberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRaspberryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRaspberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRaspberryImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlRaspberryLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlBlueberry.setBackground(new java.awt.Color(134, 89, 56));
        pnlBlueberry.setMaximumSize(new java.awt.Dimension(350, 200));
        pnlBlueberry.setMinimumSize(new java.awt.Dimension(350, 200));
        pnlBlueberry.setPreferredSize(new java.awt.Dimension(350, 200));
        pnlBlueberry.setSize(new java.awt.Dimension(350, 200));

        lblBlueberryImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/blueberry.png"))); // NOI18N

        txtaBlueberry.setEditable(false);
        txtaBlueberry.setBackground(new java.awt.Color(134, 89, 56));
        txtaBlueberry.setColumns(20);
        txtaBlueberry.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaBlueberry.setForeground(new java.awt.Color(255, 255, 255));
        txtaBlueberry.setLineWrap(true);
        txtaBlueberry.setRows(5);
        txtaBlueberry.setText("Made with real wild blueberries, this \ncreamy ice cream is rich in flavor and \nnostalgia.\nIngredients: Blueberries, cream, sugar, milk.\nServing Suggestions: Enjoy it in a bowl topped with granola!\n\nCONTAINS DAIRY\n");
        txtaBlueberry.setAutoscrolls(false);
        txtaBlueberry.setFocusable(false);
        jScrollPane11.setViewportView(txtaBlueberry);

        jLabel4.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("WILD BLUEBERRY");

        javax.swing.GroupLayout pnlBlueberryLayout = new javax.swing.GroupLayout(pnlBlueberry);
        pnlBlueberry.setLayout(pnlBlueberryLayout);
        pnlBlueberryLayout.setHorizontalGroup(
            pnlBlueberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBlueberryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBlueberryImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBlueberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBlueberryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBlueberryLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBlueberryLayout.setVerticalGroup(
            pnlBlueberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBlueberryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBlueberryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBlueberryImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBlueberryLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlMint.setBackground(new java.awt.Color(134, 89, 56));

        lblMintImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/mint.png"))); // NOI18N

        txtaMint.setEditable(false);
        txtaMint.setBackground(new java.awt.Color(134, 89, 56));
        txtaMint.setColumns(20);
        txtaMint.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaMint.setForeground(new java.awt.Color(255, 255, 255));
        txtaMint.setLineWrap(true);
        txtaMint.setRows(5);
        txtaMint.setText("A classic favorite! Creamy mint ice \ncream loaded with rich chocolate chips\nfor a delightful crunch.\nIngredients: Mint extract, chocolate \nchips, cream, sugar.\nServing Suggestions: Perfect in a \nsundae with hot fudge!\n\nCONTAINS DAIRY");
        txtaMint.setAutoscrolls(false);
        txtaMint.setFocusable(false);
        jScrollPane13.setViewportView(txtaMint);

        jLabel5.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("MINT CHIPS");

        javax.swing.GroupLayout pnlMintLayout = new javax.swing.GroupLayout(pnlMint);
        pnlMint.setLayout(pnlMintLayout);
        pnlMintLayout.setHorizontalGroup(
            pnlMintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMintLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMintImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMintLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMintLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMintLayout.setVerticalGroup(
            pnlMintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMintLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMintImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMintLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlCookies.setBackground(new java.awt.Color(134, 89, 56));

        lblCookiesImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/cookies.png"))); // NOI18N

        txtaCookies.setEditable(false);
        txtaCookies.setBackground(new java.awt.Color(134, 89, 56));
        txtaCookies.setColumns(20);
        txtaCookies.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaCookies.setForeground(new java.awt.Color(255, 255, 255));
        txtaCookies.setLineWrap(true);
        txtaCookies.setRows(5);
        txtaCookies.setText("Creamy vanilla ice cream mixed with \ncrunchy chocolate cookies—a timeless classic!\nIngredients: Vanilla ice cream base, \nchocolate sandwich cookies.\nServing Suggestions: Serve in a cone \nor as part of an ice cream cake!\n\nCONTAINS DAIRY & EGGS");
        txtaCookies.setAutoscrolls(false);
        txtaCookies.setFocusable(false);
        jScrollPane15.setViewportView(txtaCookies);

        jLabel6.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("COOKIES AND CREAM");

        javax.swing.GroupLayout pnlCookiesLayout = new javax.swing.GroupLayout(pnlCookies);
        pnlCookies.setLayout(pnlCookiesLayout);
        pnlCookiesLayout.setHorizontalGroup(
            pnlCookiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCookiesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCookiesImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlCookiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCookiesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCookiesLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCookiesLayout.setVerticalGroup(
            pnlCookiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCookiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCookiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCookiesImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCookiesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlTiramisu.setBackground(new java.awt.Color(134, 89, 56));

        lblTiramisuImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/tiramisu.png"))); // NOI18N

        txtaTiramisu.setEditable(false);
        txtaTiramisu.setBackground(new java.awt.Color(134, 89, 56));
        txtaTiramisu.setColumns(20);
        txtaTiramisu.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaTiramisu.setForeground(new java.awt.Color(255, 255, 255));
        txtaTiramisu.setLineWrap(true);
        txtaTiramisu.setRows(5);
        txtaTiramisu.setText("Inspired by the classic Italian dessert, \nthis flavor combines coffee ice cream \nwith mascarpone and cocoa powder.\nIngredients: Coffee extract, \nmascarpone cheese, cocoa powder.\nServing Suggestions: Serve in a dish \ngarnished with cocoa powder!\n\nCONTAINS DAIRY & EGGS");
        txtaTiramisu.setAutoscrolls(false);
        txtaTiramisu.setFocusable(false);
        jScrollPane12.setViewportView(txtaTiramisu);

        jLabel8.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TIRAMISU");

        javax.swing.GroupLayout pnlTiramisuLayout = new javax.swing.GroupLayout(pnlTiramisu);
        pnlTiramisu.setLayout(pnlTiramisuLayout);
        pnlTiramisuLayout.setHorizontalGroup(
            pnlTiramisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTiramisuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTiramisuImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlTiramisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTiramisuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTiramisuLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel8)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        pnlTiramisuLayout.setVerticalGroup(
            pnlTiramisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTiramisuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTiramisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTiramisuImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlTiramisuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlMocha.setBackground(new java.awt.Color(134, 89, 56));

        txtaMocha.setEditable(false);
        txtaMocha.setBackground(new java.awt.Color(134, 89, 56));
        txtaMocha.setColumns(20);
        txtaMocha.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaMocha.setForeground(new java.awt.Color(255, 255, 255));
        txtaMocha.setLineWrap(true);
        txtaMocha.setRows(5);
        txtaMocha.setText("Rich coffee ice cream swirled with fudgeand crunchy almonds, perfect for \ncoffee lovers!\nIngredients: Coffee extract, fudge swirl, almonds, cream.\nServing Suggestions: Enjoy it in a cup \ntopped with whipped cream!\n\nCONTAINS DAIRY\n");
        txtaMocha.setAutoscrolls(false);
        txtaMocha.setFocusable(false);
        jScrollPane8.setViewportView(txtaMocha);

        lblMochaImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/mocha.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("MOCHA ALMOND FUDGE");

        javax.swing.GroupLayout pnlMochaLayout = new javax.swing.GroupLayout(pnlMocha);
        pnlMocha.setLayout(pnlMochaLayout);
        pnlMochaLayout.setHorizontalGroup(
            pnlMochaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMochaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMochaImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMochaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMochaLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7))
                    .addGroup(pnlMochaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMochaLayout.setVerticalGroup(
            pnlMochaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMochaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMochaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMochaImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMochaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlBrownie.setBackground(new java.awt.Color(134, 89, 56));

        lblBrownieImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/brownie.png"))); // NOI18N

        txtaBrownie.setEditable(false);
        txtaBrownie.setBackground(new java.awt.Color(134, 89, 56));
        txtaBrownie.setColumns(20);
        txtaBrownie.setFont(new java.awt.Font("Apple Braille", 0, 10)); // NOI18N
        txtaBrownie.setForeground(new java.awt.Color(255, 255, 255));
        txtaBrownie.setLineWrap(true);
        txtaBrownie.setRows(5);
        txtaBrownie.setText("Decadent chocolate ice cream filled withgooey brownie chunks—pure bliss in \nevery bite!\nIngredients: Chocolate ice cream base, brownie pieces, fudge sauce.\nServing Suggestions: Perfect as a \nsundae topped with hot fudge!\n\nCONTAINS DAIRY");
        txtaBrownie.setAutoscrolls(false);
        txtaBrownie.setFocusable(false);
        jScrollPane16.setViewportView(txtaBrownie);

        jLabel9.setFont(new java.awt.Font("Libian SC", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("LAVA BROWNIE");

        javax.swing.GroupLayout pnlBrownieLayout = new javax.swing.GroupLayout(pnlBrownie);
        pnlBrownie.setLayout(pnlBrownieLayout);
        pnlBrownieLayout.setHorizontalGroup(
            pnlBrownieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBrownieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBrownieImg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBrownieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBrownieLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBrownieLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBrownieLayout.setVerticalGroup(
            pnlBrownieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBrownieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBrownieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBrownieImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBrownieLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTiramisu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBlueberry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlMango, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(72, 72, 72)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlMocha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlMint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlRaspberry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCookies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBrownie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73))
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRaspberry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlMango, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCookies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlMint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlBlueberry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMocha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTiramisu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlBrownie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("Menu", pnlMenu);

        pnlAdmin.setBackground(new java.awt.Color(183, 160, 135));
        pnlAdmin.setMaximumSize(new java.awt.Dimension(1340, 679));
        pnlAdmin.setMinimumSize(new java.awt.Dimension(1340, 679));
        pnlAdmin.setPreferredSize(new java.awt.Dimension(1340, 679));
        pnlAdmin.setSize(new java.awt.Dimension(1340, 679));

        tblIceCream.setBackground(new java.awt.Color(158, 114, 77));
        tblIceCream.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Flavour Name", "Availability ", "Stock Quantity", "Price per Scoop", "Calorie per Scoop", "Allergens", "Special Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblIceCream.setSize(new java.awt.Dimension(1230, 235));
        jScrollPane1.setViewportView(tblIceCream);

        lbltblTitleIceCream.setFont(new java.awt.Font("Hiragino Mincho ProN", 0, 14)); // NOI18N
        lbltblTitleIceCream.setForeground(new java.awt.Color(255, 255, 255));
        lbltblTitleIceCream.setText("Ice-cream Infromation");
        lbltblTitleIceCream.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderShadow")));

        pnlForm.setBackground(new java.awt.Color(158, 114, 77));
        pnlForm.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ICE CREAM FORM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlForm.setForeground(new java.awt.Color(255, 255, 255));
        pnlForm.setPreferredSize(new java.awt.Dimension(1230, 280));

        btnADD.setBackground(new java.awt.Color(114, 78, 49));
        btnADD.setForeground(new java.awt.Color(255, 255, 255));
        btnADD.setText("ADD");
        btnADD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnUPDATE.setBackground(new java.awt.Color(114, 78, 49));
        btnUPDATE.setForeground(new java.awt.Color(255, 255, 255));
        btnUPDATE.setText("UPDATE");
        btnUPDATE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });

        btnDELETE.setBackground(new java.awt.Color(114, 78, 49));
        btnDELETE.setForeground(new java.awt.Color(255, 255, 255));
        btnDELETE.setText("DELETE");
        btnDELETE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });

        btnCLEAR.setBackground(new java.awt.Color(114, 78, 49));
        btnCLEAR.setForeground(new java.awt.Color(255, 255, 255));
        btnCLEAR.setText("CLEAR");
        btnCLEAR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLEARActionPerformed(evt);
            }
        });

        tfFlavourName.setBackground(new java.awt.Color(158, 114, 77));
        tfFlavourName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flavour Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfFlavourName.setPreferredSize(new java.awt.Dimension(130, 59));

        tfAvailability.setBackground(new java.awt.Color(158, 114, 77));
        tfAvailability.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Availability", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfAvailability.setPreferredSize(new java.awt.Dimension(130, 59));

        tfStockQuantity.setBackground(new java.awt.Color(158, 114, 77));
        tfStockQuantity.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock Quantity", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfStockQuantity.setPreferredSize(new java.awt.Dimension(130, 59));

        tfPricePerScoop.setBackground(new java.awt.Color(158, 114, 77));
        tfPricePerScoop.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price per Scoop", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfPricePerScoop.setPreferredSize(new java.awt.Dimension(130, 59));

        tfCaloriePerScoop.setBackground(new java.awt.Color(158, 114, 77));
        tfCaloriePerScoop.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calorie per Scoop", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfCaloriePerScoop.setPreferredSize(new java.awt.Dimension(130, 59));

        tfAllergens.setBackground(new java.awt.Color(158, 114, 77));
        tfAllergens.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Allergens", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfAllergens.setPreferredSize(new java.awt.Dimension(130, 59));

        tfSpecialNotes.setBackground(new java.awt.Color(158, 114, 77));
        tfSpecialNotes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Special Notes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfSpecialNotes.setPreferredSize(new java.awt.Dimension(130, 59));

        tfID.setBackground(new java.awt.Color(158, 114, 77));
        tfID.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        tfID.setPreferredSize(new java.awt.Dimension(130, 59));

        lblFeedbackDelete.setBackground(new java.awt.Color(158, 114, 77));
        lblFeedbackDelete.setForeground(new java.awt.Color(153, 0, 0));

        lblFeedbackUpdate.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172)
                .addComponent(btnUPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173)
                .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173)
                .addComponent(btnCLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 173, Short.MAX_VALUE))
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(680, 680, 680)
                .addComponent(lblFeedbackDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblErrorMsgId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tfFlavourName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblErrorMsgFlavorName, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgStockQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfStockQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgPricePerScoop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfPricePerScoop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgCaloriePerScoop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfCaloriePerScoop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgAllergens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfAllergens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblErrorMsgSpecialNotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfSpecialNotes, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(lblFeedbackUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPricePerScoop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAllergens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfFlavourName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfCaloriePerScoop, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSpecialNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorMsgPricePerScoop)
                            .addComponent(lblErrorMsgCaloriePerScoop)
                            .addComponent(lblErrorMsgAllergens)
                            .addComponent(lblErrorMsgSpecialNotes)
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addComponent(lblErrorMsgId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGap(109, 109, 109)
                        .addComponent(lblFeedbackDelete)
                        .addGap(13, 13, 13))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorMsgStockQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblErrorMsgFlavorName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 9, Short.MAX_VALUE)
                                .addComponent(lblErrorMsgAvailability, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(70, 70, 70)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(lblFeedbackUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbltblTitleIceCream)
                    .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(pnlForm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1240, Short.MAX_VALUE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbltblTitleIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        tabPaneMain.addTab("Admin", pnlAdmin);

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabPaneMain, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tabPaneMain))
        );

        pnlLoginScreen.setBackground(new java.awt.Color(183, 160, 135));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1340, 840));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1340, 840));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1340, 840));
        pnlLoginScreen.setRequestFocusEnabled(false);
        pnlLoginScreen.setSize(new java.awt.Dimension(1340, 840));

        pnlSplitLogin.setBackground(new java.awt.Color(126, 81, 49));

        lblLoginLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/LogoLogin.png"))); // NOI18N

        javax.swing.GroupLayout pnlSplitLoginLayout = new javax.swing.GroupLayout(pnlSplitLogin);
        pnlSplitLogin.setLayout(pnlSplitLoginLayout);
        pnlSplitLoginLayout.setHorizontalGroup(
            pnlSplitLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSplitLoginLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(lblLoginLogo)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        pnlSplitLoginLayout.setVerticalGroup(
            pnlSplitLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSplitLoginLayout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addComponent(lblLoginLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(246, 246, 246))
        );

        lblWelcome.setFont(new java.awt.Font("Lao MN", 0, 36)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(247, 235, 223));
        lblWelcome.setText("Welcome Back !");

        tfUsername.setBackground(new java.awt.Color(230, 229, 223));
        tfUsername.setText("aarya");
        tfUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hiragino Mincho ProN", 0, 13))); // NOI18N
        tfUsername.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        btnLogin.setBackground(new java.awt.Color(247, 235, 223));
        btnLogin.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        pfPassword.setBackground(new java.awt.Color(230, 229, 223));
        pfPassword.setText("aarya");
        pfPassword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Hiragino Mincho ProN", 0, 13))); // NOI18N

        lblLoginError.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 13)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlLoginScreenLayout = new javax.swing.GroupLayout(pnlLoginScreen);
        pnlLoginScreen.setLayout(pnlLoginScreenLayout);
        pnlLoginScreenLayout.setHorizontalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addComponent(pnlSplitLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                            .addComponent(lblWelcome)
                            .addGap(166, 166, 166))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                            .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(195, 195, 195))
                        .addComponent(lblLoginError, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(244, 244, 244))))
        );
        pnlLoginScreenLayout.setVerticalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSplitLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLoginError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1340, 840));
        setMinimumSize(new java.awt.Dimension(1340, 840));
        setSize(new java.awt.Dimension(1340, 840));

        pnlLoadingScreen.setBackground(new java.awt.Color(163, 127, 95));
        pnlLoadingScreen.setBounds(new java.awt.Rectangle(0, 0, 1340, 840));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1340, 840));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1340, 840));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1340, 840));

        pgBarSplashScreen.setBackground(new java.awt.Color(165, 153, 132));

        lblLoading.setBackground(new java.awt.Color(113, 79, 10));
        lblLoading.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblLoading.setForeground(new java.awt.Color(113, 79, 10));
        lblLoading.setText("Getting the scoops ready...");

        lblLoadingName.setFont(new java.awt.Font("Kokonor", 1, 36)); // NOI18N
        lblLoadingName.setForeground(new java.awt.Color(98, 54, 31));
        lblLoadingName.setText("Silk Artisanal Creamery");

        lblLoadingLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/silk/resources/loadingLogo.png"))); // NOI18N

        javax.swing.GroupLayout pnlLoadingScreenLayout = new javax.swing.GroupLayout(pnlLoadingScreen);
        pnlLoadingScreen.setLayout(pnlLoadingScreenLayout);
        pnlLoadingScreenLayout.setHorizontalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 295, Short.MAX_VALUE))
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(lblLoadingName, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(417, 417, 417)
                        .addComponent(lblLoadingLogo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLoadingScreenLayout.setVerticalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoadingScreenLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(lblLoadingLogo)
                .addGap(18, 18, 18)
                .addComponent(lblLoadingName, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoading)
                .addGap(91, 91, 91))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1340, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
    
    private void initializeData() {
        IceCreamList = new LinkedList<>();
        
    }
    
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }
            
            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    
    
    private void registerIceCream(IceCreamModel IceCream) {
        IceCreamList.add(IceCream);
        DefaultTableModel model = (DefaultTableModel) tblIceCream.getModel();
        model.addRow(new Object[]{
            IceCream.getsilkId(), IceCream.getflavourName(), IceCream.getavailability(),
            IceCream.getstockQuantity(), IceCream.getpricePerScoop(), IceCream.getcaloriePerScoop(), IceCream.getallergens(), IceCream.getspecialNotes()
        });
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = tfUsername.getText();
        String password = new String(pfPassword.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("aarya") || !password.equals("aarya")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnCLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLEARActionPerformed
        // TODO add your handling code here:
        tfID.setText("");
        tfFlavourName.setText("");
        tfAvailability.setText("");
        tfStockQuantity.setText("");
        tfPricePerScoop.setText("");
        tfCaloriePerScoop.setText("");
        tfAllergens.setText("");
        tfSpecialNotes.setText("");
    }//GEN-LAST:event_btnCLEARActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        // TODO add your handling code here:
        lblFeedbackDelete.setText("");
        try {
                    int silkId = Integer.parseInt(tfID.getText().trim());

        // Find the ice cream with the given ID
        IceCreamModel iceCreamToDelete = null;
        for (IceCreamModel iceCream : IceCreamList) {
            if (iceCream.getsilkId() == silkId) {
                iceCreamToDelete = iceCream;
                break;
            }
        }

        // Remove the ice cream if it exists
        if (iceCreamToDelete != null) {
            IceCreamList.remove(iceCreamToDelete);
            lblFeedbackDelete.setText("Record deleted successfully!");
            loadListToTable(IceCreamList); // Refresh table or UI
        } else {
            lblFeedbackDelete.setText("No matching record found.");
        }
    } catch (NumberFormatException ex) {
        lblFeedbackDelete.setText("Please enter a valid ID.");
                }
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        // TODO add your handling code here:
        lblFeedbackUpdate.setText("");

    try {
        // Parse the ID from the input field
        int silkId = Integer.parseInt(tfID.getText().trim());

        // Find the ice cream record by ID
        IceCreamModel iceCreamToUpdate = null;
        for (IceCreamModel iceCream : IceCreamList) {
            if (iceCream.getsilkId() == silkId) {
                iceCreamToUpdate = iceCream;
                break;
            }
        }

        if (iceCreamToUpdate != null) {
            // Perform field validations before updating
            String flavorName = tfFlavourName.getText().trim();
            String availability = tfAvailability.getText().trim();
            int stockQuantity = Integer.parseInt(tfStockQuantity.getText().trim());
            float pricePerScoop = Float.parseFloat(tfPricePerScoop.getText().trim());
            int caloriePerScoop = Integer.parseInt(tfCaloriePerScoop.getText().trim());
            String allergens = tfAllergens.getText().trim();
            String specialNotes = tfSpecialNotes.getText().trim();

            boolean isValid = true;

            if (!ValidationUtil.isValidFlavorName(flavorName)) {
                lblErrorMsgFlavorName.setText("Invalid flavor name!");
                isValid = false;
            } else if (!ValidationUtil.isValidAvailability(availability)) {
                lblErrorMsgAvailability.setText("Invalid availability status!");
                isValid = false;
            } else if (!ValidationUtil.isValidStockQuantity(stockQuantity)) {
                lblErrorMsgStockQuantity.setText("Invalid stock quantity!");
                isValid = false;
            } else if (!ValidationUtil.isValidPricePerScoop(pricePerScoop)) {
                lblErrorMsgPricePerScoop.setText("Invalid price per scoop!");
                isValid = false;
            } else if (!ValidationUtil.isValidcaloriePerScoop(caloriePerScoop)) {
                lblErrorMsgCaloriePerScoop.setText("Invalid calorie per scoop!");
                isValid = false;
            } else if (!ValidationUtil.isValidallergens(allergens)) {
                lblErrorMsgAllergens.setText("Invalid allergens!");
                isValid = false;
            } else if (!ValidationUtil.isValidspecialNotes(specialNotes)) {
                lblErrorMsgSpecialNotes.setText("Invalid special notes!");
                isValid = false;
            }

            if (isValid) {
                // Update the ice cream object
                iceCreamToUpdate.setflavourName(flavorName);
                iceCreamToUpdate.setavailability(availability);
                iceCreamToUpdate.setstockQuantity(stockQuantity);
                iceCreamToUpdate.setpricePerScoop(pricePerScoop);
                iceCreamToUpdate.setcaloriePerScoop(caloriePerScoop);
                iceCreamToUpdate.setallergens(allergens);
                iceCreamToUpdate.setspecialNotes(specialNotes);

                // Refresh the table or UI
                loadListToTable(IceCreamList);

                lblFeedbackUpdate.setText("Record updated successfully!");
            }
        } else {
            lblFeedbackUpdate.setText("No matching record found for the given ID.");
        }
    } catch (NumberFormatException ex) {
        lblFeedbackUpdate.setText("Please enter valid inputs.");
    }

    // Clear the ID field to prompt for new input
    tfID.setText("");
    tfFlavourName.setText("");
    tfAvailability.setText("");
    tfStockQuantity.setText("");
    tfPricePerScoop.setText("");
    tfCaloriePerScoop.setText("");
    tfAllergens.setText("");
    tfSpecialNotes.setText("");     
    
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        
        boolean isValid = true;

        // Validate ID
        isValid &= validateField(
            tfID, "ID", lblErrorMsgId, "Must be a number.",
            errorColor, yellowColor, ValidationUtil.isValidID(Integer.parseInt(tfID.getText().trim()))
        );

        // Validate Flavor Name
        isValid &= validateField(
            tfFlavourName, "Flavor Name", lblErrorMsgFlavorName, "Must contain only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidFlavorName(tfFlavourName.getText().trim())
        );

        // Validate Availability
        isValid &= validateField(
            tfAvailability, "Availability", lblErrorMsgAvailability, "Must contain only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidAvailability(tfAvailability.getText().trim())
        );

        // Validate Stock Quantity
        try {
            int stockQuantity = Integer.parseInt(tfStockQuantity.getText().trim());
            isValid &= validateField(
                tfStockQuantity, "Stock Quantity", lblErrorMsgStockQuantity, "Must be a valid number.",
                errorColor, yellowColor, ValidationUtil.isValidStockQuantity(stockQuantity)
            );
        } catch (NumberFormatException e) {
            validateField(tfStockQuantity, "Stock Quantity", lblErrorMsgStockQuantity, "Must be a valid number.",
                errorColor, yellowColor, false);
            isValid = false;
        }

        // Validate Price Per Scoop
        try {
            float pricePerScoop = Float.parseFloat(tfPricePerScoop.getText().trim());
            isValid &= validateField(
                tfPricePerScoop, "Price Per Scoop", lblErrorMsgPricePerScoop, "Must be below 1000.",
                errorColor, yellowColor, ValidationUtil.isValidPricePerScoop(pricePerScoop)
            );
        } catch (NumberFormatException e) {
            validateField(tfPricePerScoop, "Price Per Scoop", lblErrorMsgPricePerScoop, "Must be a valid number.",
                errorColor, yellowColor, false);
            isValid = false;
        }

        // Validate Calorie Per Scoop
        try {
            int caloriePerScoop = Integer.parseInt(tfCaloriePerScoop.getText().trim());
            isValid &= validateField(
                tfCaloriePerScoop, "Calorie Per Scoop", lblErrorMsgCaloriePerScoop, "Must be a valid number.",
                errorColor, yellowColor, ValidationUtil.isValidcaloriePerScoop(caloriePerScoop)
            );
        } catch (NumberFormatException e) {
            validateField(tfCaloriePerScoop, "Calorie Per Scoop", lblErrorMsgCaloriePerScoop, "Must be a valid number.",
                errorColor, yellowColor, false);
            isValid = false;
        }

        // Validate Allergens
        isValid &= validateField(
            tfAllergens, "Allergens", lblErrorMsgAllergens, "Must contain only alphabets or commas.",
            errorColor, yellowColor, ValidationUtil.isValidallergens(tfAllergens.getText().trim())
        );

        // Validate Special Notes
        isValid &= validateField(
            tfSpecialNotes, "Special Notes", lblErrorMsgSpecialNotes, "Must contain only alphabets.",
            errorColor, yellowColor, ValidationUtil.isValidspecialNotes(tfSpecialNotes.getText().trim())
        );

        // Perform action if all fields are valid
        if (isValid) {
            IceCreamModel newIceCream = new IceCreamModel(
                Integer.parseInt(tfID.getText().trim()),
                tfFlavourName.getText().trim(),
                tfAvailability.getText().trim(),
                Integer.parseInt(tfStockQuantity.getText().trim()),
                Float.parseFloat(tfPricePerScoop.getText().trim()),
                Integer.parseInt(tfCaloriePerScoop.getText().trim()),
                tfAllergens.getText().trim(),
                tfSpecialNotes.getText().trim()
            );

            // Example action: Add or update logic
            if (checkDuplicateIceCream(newIceCream)) {
                tfID.setBorder(createTitledBorder(errorColor, "ID"));
                showDialogBox("ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
            if (checkDuplicateIceCream(newIceCream)) {
                tfID.setBorder(createTitledBorder(errorColor, "ID"));
                showDialogBox("ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            }    // Add the ice cream to the list
                IceCreamList.add(newIceCream);
                clearIceCreamForm();
                loadListToTable(IceCreamList);
                tfID.setBorder(createTitledBorder(yellowColor, "ID"));
                showDialogBox("Ice cream added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        }

        
    }//GEN-LAST:event_btnADDActionPerformed
    private void clearIceCreamForm() {
        tfID.setText("");
        tfFlavourName.setText("");
        tfAvailability.setText("");
        tfStockQuantity.setText("");
        tfPricePerScoop.setText("");
        tfCaloriePerScoop.setText("");
        tfAllergens.setText("");
        tfSpecialNotes.setText("");     
    }
    // Helper methods to clear form and check duplicates

    private boolean checkDuplicateIceCream(IceCreamModel iceCream) {
        return IceCreamList.stream().anyMatch(existing -> existing.getsilkId() == iceCream.getsilkId());
    }
    
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        tfUsername.setText("");
        pfPassword.setText("");
        loadScreen("LoginScreen");
    }//GEN-LAST:event_btnLogOutActionPerformed
    
    private void loadListToTable(List<IceCreamModel> IceCreamList) {
        DefaultTableModel model = (DefaultTableModel) tblIceCream.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with student data
        IceCreamList.forEach(iceCream -> model.addRow(new Object[]{
            iceCream.getsilkId(),
            iceCream.getflavourName(),
            iceCream.getavailability(),
            iceCream.getstockQuantity(),
            iceCream.getpricePerScoop(),
            iceCream.getcaloriePerScoop(),
            iceCream.getallergens(),
            iceCream.getspecialNotes(),
        }));
    }
    private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createTitledBorder(successColor, fieldName));
            errorLbl.setVisible(false);
            return true;
        }
    }
    private javax.swing.border.TitledBorder createTitledBorder(Color color, String title) {
        return javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(color, 2),
                title,
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12),
                color
        );
    }
    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }
    

    /**
     * @param args the command line arguments
     */
    
    
     
    
   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Silk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Silk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Silk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Silk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Silk().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnCLEAR;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblBlueberryImg;
    private javax.swing.JLabel lblBrownieImg;
    private javax.swing.JLabel lblChallengesWeFace;
    private javax.swing.JLabel lblCookiesImg;
    private javax.swing.JLabel lblErrorMsgAllergens;
    private javax.swing.JLabel lblErrorMsgAvailability;
    private javax.swing.JLabel lblErrorMsgCaloriePerScoop;
    private javax.swing.JLabel lblErrorMsgFlavorName;
    private javax.swing.JLabel lblErrorMsgId;
    private javax.swing.JLabel lblErrorMsgPricePerScoop;
    private javax.swing.JLabel lblErrorMsgSpecialNotes;
    private javax.swing.JLabel lblErrorMsgStockQuantity;
    private javax.swing.JLabel lblFeedbackDelete;
    private javax.swing.JLabel lblFeedbackUpdate;
    private javax.swing.JLabel lblJoinUs;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingLogo;
    private javax.swing.JLabel lblLoadingName;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginLogo;
    private javax.swing.JLabel lblMainLogo;
    private javax.swing.JLabel lblMangoImg;
    private javax.swing.JLabel lblMintImg;
    private javax.swing.JLabel lblMochaImg;
    private javax.swing.JLabel lblOrangeImg;
    private javax.swing.JLabel lblOurStory;
    private javax.swing.JLabel lblQualityIngredients;
    private javax.swing.JLabel lblRaspberryImg;
    private javax.swing.JLabel lblTiramisuImg;
    private javax.swing.JLabel lblTryOurTexts;
    private javax.swing.JLabel lblVeganOptions;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lbltblTitleIceCream;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlBlueberry;
    private javax.swing.JPanel pnlBrownie;
    private javax.swing.JPanel pnlChallengesWeFace;
    private javax.swing.JPanel pnlCookies;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlJoinUs;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlMango;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMint;
    private javax.swing.JPanel pnlMocha;
    private javax.swing.JPanel pnlOrange;
    private javax.swing.JPanel pnlOurStory;
    private javax.swing.JPanel pnlQualiryIngredients;
    private javax.swing.JPanel pnlRaspberry;
    private javax.swing.JPanel pnlSplitLogin;
    private javax.swing.JPanel pnlTiramisu;
    private javax.swing.JPanel pnlTryOurFlavours;
    private javax.swing.JPanel pnlVeganOptions;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblIceCream;
    private javax.swing.JTextField tfAllergens;
    private javax.swing.JTextField tfAvailability;
    private javax.swing.JTextField tfCaloriePerScoop;
    private javax.swing.JTextField tfFlavourName;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfPricePerScoop;
    private javax.swing.JTextField tfSpecialNotes;
    private javax.swing.JTextField tfStockQuantity;
    private javax.swing.JTextField tfUsername;
    private javax.swing.JTextArea txtaBlueberry;
    private javax.swing.JTextArea txtaBrownie;
    private javax.swing.JTextArea txtaChallangesWeFace;
    private javax.swing.JTextArea txtaCookies;
    private javax.swing.JTextArea txtaJoinUs;
    private javax.swing.JTextArea txtaMango;
    private javax.swing.JTextArea txtaMint;
    private javax.swing.JTextArea txtaMocha;
    private javax.swing.JTextArea txtaOrange;
    private javax.swing.JTextArea txtaOurStory;
    private javax.swing.JTextArea txtaQualityIngredients;
    private javax.swing.JTextArea txtaRaspberry;
    private javax.swing.JTextArea txtaTiramisu;
    private javax.swing.JTextArea txtaTryOurFlavours;
    private javax.swing.JTextArea txtaVeganOptions;
    // End of variables declaration//GEN-END:variables
}
